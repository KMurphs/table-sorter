{"version":3,"sources":["components/CustomFormsControls/checkbox.tsx","components/Sorters/heapSort.ts","components/Sorters/quickSort.ts","components/Sorters/bubbleSort.ts","components/Sorters/mergeSort.ts","components/Sorters/selectionSort.ts","components/Sorters/insertionSort.ts","components/Sorters/quartileSort.ts","components/Sorters/index.ts","components/CSSLoaders/index.tsx","components/TableSorter/iterators.ts","components/TableSorter/table.tsx","custom-hooks/useEffectWhenInView.ts","components/TableSorter/index.tsx","components/Welcome/assets/bg.svg","components/SortVizualizer/index.tsx","components/Welcome/index.tsx","App.tsx","custom-hooks/useCustomCss_vh.ts","custom-hooks/useAppURI.ts","reportWebVitals.ts","index.tsx"],"names":["Checkbox","type","props","Checkbox1","Checkbox0","value","onChange","onText","offText","constantText","extraClasses","htmlFor","className","id","name","checked","evt","target","defaultProps","heapify","arr","heapSize","parent","params","key","inAscending","onMoveCb","lChild","rChild","maxFamily","sortComparator","swap","sort","start","end","runner","Math","round","length","partition","low","high","cache","i","undefined","pivot","position","mover","merge","middle","lowArray","slice","highArray","lowRunner","highRunner","mainRunner","getValue","minVal","currVal","markQuartiles","rest","range","q1","median","q3","marks","reverse","forEach","item","index","quickSort","a","b","param","aVal","bVal","getSorter","algorithmName","bubbleSort","heapSort","mergeSort","selectionSort","insertionSort","quartileSort","tmp","el","CSSLoaderDualRing","React","Component","arrayIterator","takeNFromIterator","data","iterationCount","f","batchSize","iterator","batchCount","isDone","next","done","push","takeBatchFromIterator","init","size","it","reset","batch","Array","isArray","keyToID","toLowerCase","replace","Table","onDragStart","keysToSortBy","sorter","useState","srcData","setSrcData","useEffect","fetch","then","res","json","map","isDirectionUp","batchIterator","current","cssSelector","callback","uiData","setUiData","hasNoMoreData","setHasNoMoreData","useRef","nextBatch","loadMore","useLayoutEffect","document","querySelector","intObserver","IntersectionObserver","entries","entry","intersectionRatio","threshold","observe","unobserve","keysFromData","useMemo","Object","keys","keysFromProps","tableRef","srcCopy","scrollTop","ref","idx","isKeyToSortBy","includes","draggable","idx_","quartileMark","colSpan","TableSorter","checkbox","setCheckbox","sortAlg","setSortAlg","sortKeys","_setSortKeys","onClick","e","onDragOver","ev","preventDefault","stopPropagation","onDrop","newKey","JSON","parse","dataTransfer","getData","find","keyID","isUp","filter","inputCheckbox","currentTarget","setData","stringify","innerText","SortVizualizer","nBars","currentSortingAlsorithm","_setCurrentSortingAlsorithm","getRandomHeight","random","bars","fill","_","handleNo","class","barEffects","counter","setCounter","renderBarEffect","c","Promise","resolve","setTimeout","bar","timeout","curr","initial","final","level1","level2","isSwapEffect","first","style","findIndex","height","left","reduce","acc","aria-hidden","algName","Welcome","onStartExploring","src","hero","alt","App","htmlTarget","adjuster","setProperty","window","innerHeight","addEventListener","removeEventListener","useCustomCss_vh","uri","baseAppURI","baseCurrURI","location","pathname","split","replaceAll","useAppURI","console","log","path","render","history","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0ddb46a5.chunk.js","sourcesContent":["import \"./checkbox.css\";\r\n\r\ntype Props = {\r\n  type?: number\r\n  onText?: string\r\n  offText?: string\r\n  constantText?: string\r\n  extraClasses?: string\r\n  value: boolean\r\n  onChange: (newVal: boolean)=>void\r\n}\r\ntype CheckoxProps = {\r\n  onText?: string\r\n  offText?: string\r\n  constantText?: string\r\n  extraClasses?: string\r\n  value: boolean\r\n  onChange: (newVal: boolean)=>void\r\n}\r\nexport default function Checkbox({type, ...props}: Props) {\r\n  if(type === 1) return <Checkbox1 {...props}/> \r\n  return <Checkbox0 {...props}/> \r\n}\r\n(Checkbox as React.FC).defaultProps = {\r\n  type: 0,\r\n  onText: \"\",\r\n  offText: \"\",\r\n  constantText: \"\",\r\n  extraClasses: \"\",\r\n  value: false,\r\n}\r\n\r\n\r\n\r\nfunction Checkbox0({value, onChange, onText, offText, constantText, extraClasses}: CheckoxProps) {\r\n\r\n  return (\r\n    <label htmlFor=\"custom-checkbox\" className={`custom-checkbox__container custom-checkbox__container-0 ${extraClasses}`}>\r\n       <input type=\"checkbox\" id=\"custom-checkbox\" name=\"custom-checkbox\" checked={value} onChange={evt=>onChange(evt.target.checked)} />\r\n       <div className=\"custom-checkbox__background\">\r\n          <span className=\"custom-checkbox__thumb\"></span>\r\n       </div>\r\n       <p className=\"custom-checkbox__text\">{constantText}<span>{offText}</span> <span>{onText}</span></p>     \r\n    </label>\r\n  )\r\n}\r\n\r\nfunction Checkbox1({value, onChange, onText, offText, constantText, extraClasses}: CheckoxProps) {\r\n\r\n  return (\r\n    <label htmlFor=\"custom-checkbox\" className={`custom-checkbox__container custom-checkbox__container-1 ${extraClasses}`}>\r\n      <input type=\"checkbox\" id=\"custom-checkbox\" name=\"custom-checkbox\" checked={value} onChange={evt=>onChange(evt.target.checked)} />\r\n      <div className=\"custom-checkbox__background\">\r\n        <span className=\"custom-checkbox__thumb\"></span>\r\n      </div>\r\n      <p className=\"custom-checkbox__text\">\r\n        <span className=\"custom-checkbox__constantText\">{constantText}</span>\r\n        <span className=\"custom-checkbox__offText\">{offText}</span> \r\n        <span className=\"custom-checkbox__onText\">{onText}</span>\r\n      </p>     \r\n    </label>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function CheckboxSource() {\r\n\r\n//   return (\r\n//     <label htmlFor=\"custom-checkbox\" className=\"custom-checkbox-container\">\r\n//        <input type=\"checkbox\" value=\"1\" id=\"custom-checkbox\" name=\"\" />\r\n//        <div className=\"custom-checkbox-background\">\r\n//           <span></span>\r\n//        </div>\r\n//        <p>Checkbox <span>Deselected</span> <span>Selected</span></p>     \r\n//     </label>\r\n//   )\r\n// }","import { swap, T, TSorter, TSortEffectCallback, sortComparator } from \".\";\r\n\r\n\r\n\r\n\r\nconst sort: TSorter = (arr, start, end, params=[{key: \"value\", inAscending: true}], onMoveCb)=>{\r\n\r\n  for(let runner = Math.round(arr.length / 2 - 1); runner >= 0; runner--){\r\n    heapify(arr, arr.length, runner, params, onMoveCb);\r\n  }\r\n\r\n  for(let runner = arr.length - 1; runner > 0; runner--){\r\n    swap(arr, 0, runner);\r\n    onMoveCb && onMoveCb(0, runner, [runner], [], true);\r\n    heapify(arr, runner, 0, params, onMoveCb);\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\n\r\nconst heapify = (arr: T[] | number[], heapSize: number, parent: number, params=[{key: \"value\", inAscending: true}], onMoveCb?: TSortEffectCallback) => {\r\n\r\n  const lChild = 2 * parent + 1;\r\n  const rChild = 2 * parent + 2;\r\n\r\n  let maxFamily = parent;\r\n  if((lChild < heapSize) && (sortComparator(arr[lChild], arr[maxFamily], params))) maxFamily = lChild;\r\n  if((rChild < heapSize) && (sortComparator(arr[rChild], arr[maxFamily], params))) maxFamily = rChild;\r\n  if(maxFamily === parent) return;\r\n\r\n  swap(arr, maxFamily, parent);\r\n  onMoveCb && onMoveCb(maxFamily, parent, [parent], [], true);\r\n  \r\n  heapify(arr, heapSize, maxFamily, params, onMoveCb);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default sort;\r\n\r\n","import { swap, T, TSorter, TSortEffectCallback, sortComparator, TSortParam } from \".\";\r\n\r\n\r\nconst sort: TSorter = (arr, start, end, params = [{key: \"value\", inAscending: true}], onMoveCb)=>{\r\n\r\n  const low = start || 0;\r\n  const high = end === undefined || end === null ? arr.length - 1 : end;\r\n\r\n  if(low >= high) return arr;\r\n\r\n  const pivot = partition(arr, low, high, params, onMoveCb);\r\n  sort(arr, low, pivot - 1, params, onMoveCb);\r\n  sort(arr, pivot + 1, high, params, onMoveCb);\r\n\r\n  return arr;\r\n}\r\n\r\n\r\nconst partition = (arr: T[] | number[], low: number, high: number, params: TSortParam[] = [{key: \"value\", inAscending: true}], onMoveCb?: TSortEffectCallback) => {\r\n\r\n  // const pivot = getValue(arr[high])\r\n  let cache = low - 1;\r\n  for(let i = low; i <= high; i++){\r\n    if(sortComparator(arr[high], arr[i], params)) {\r\n      cache++;\r\n      swap(arr, cache, i);\r\n      cache !== i && onMoveCb && onMoveCb(cache, i, [low, high], [], true);\r\n    }\r\n  }\r\n  return cache;\r\n\r\n}\r\n\r\n\r\nexport default sort;\r\n\r\n\r\n// export { swap }","import { swap, TSorter, sortComparator } from \".\";\r\n\r\n\r\n\r\n\r\nconst sort: TSorter = (arr, start, end, params = [{key: \"value\", inAscending: true}], onMoveCb)=>{\r\n\r\n  for(let position = arr.length - 1; position > 0; position--){\r\n    for(let mover = 0; mover < position; mover++){\r\n      if(sortComparator(arr[mover], arr[mover + 1], params)){\r\n        swap(arr, mover, mover + 1);\r\n        onMoveCb && onMoveCb(mover, mover + 1, [position], [], true);\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default sort;\r\n\r\n","import { getValue, T, TSorter, TSortEffectCallback, sortComparator, TSortParam } from \".\";\r\n\r\n\r\n\r\n\r\nconst sort: TSorter = (arr, start, end, params=[{key: \"value\", inAscending: true}], onMoveCb)=>{\r\n\r\n  const low = start || 0;\r\n  const high = end === undefined || end === null ? arr.length - 1 : end;\r\n\r\n  if(low >= high) return arr;\r\n  const middle = Math.round((low + high) / 2);\r\n\r\n  sort(arr, low, middle - 1, params, onMoveCb);\r\n  sort(arr, middle, high, params, onMoveCb);\r\n  merge(arr, low, middle, high, params, onMoveCb);\r\n\r\n\r\n  return arr;\r\n}\r\n\r\n\r\n\r\n\r\nconst merge = (arr: T[] | number[], low: number, middle: number, high: number, params: TSortParam[], onMoveCb?: TSortEffectCallback)=>{\r\n\r\n  const lowArray = arr.slice(low, middle);\r\n  const highArray = arr.slice(middle, high + 1);\r\n\r\n  let lowRunner = 0;\r\n  let highRunner = 0;\r\n  let mainRunner = low;\r\n\r\n  \r\n\r\n  while((lowRunner !== lowArray.length) && (highRunner !== highArray.length)){\r\n    if(sortComparator(highArray[highRunner], lowArray[lowRunner], params)) {\r\n      arr[mainRunner] = lowArray[lowRunner]; \r\n      // onMoveCb && onMoveCb(mainRunner, partialArrRunnerOffset + partialArrRunner, [], [], true);\r\n      onMoveCb && onMoveCb(mainRunner, getValue(arr[mainRunner]), [low + lowRunner, middle + highRunner], [mainRunner], false);\r\n      lowRunner++;\r\n      mainRunner++;\r\n    }\r\n    else {\r\n      arr[mainRunner] = highArray[highRunner]; \r\n      // onMoveCb && onMoveCb(mainRunner, partialArrRunnerOffset + partialArrRunner, [], [], true);\r\n      onMoveCb && onMoveCb(mainRunner, getValue(arr[mainRunner]), [low + lowRunner, middle + highRunner], [mainRunner], false);\r\n      highRunner++;\r\n      mainRunner++;\r\n    }\r\n  }\r\n\r\n  while(lowRunner !== lowArray.length){\r\n    arr[mainRunner] = lowArray[lowRunner]; \r\n    onMoveCb && onMoveCb(mainRunner, getValue(arr[mainRunner]), [low + lowRunner, high], [mainRunner], false);\r\n    lowRunner++;\r\n    mainRunner++;\r\n  }\r\n  while(highRunner !== highArray.length){\r\n    arr[mainRunner] = highArray[highRunner]; \r\n    onMoveCb && onMoveCb(mainRunner, getValue(arr[mainRunner]), [middle - 1, middle + highRunner], [mainRunner], false);\r\n    highRunner++;\r\n    mainRunner++;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default sort;\r\n\r\n","import { swap, TSorter, sortComparator } from \".\";\r\n\r\n\r\n\r\n\r\nconst sort: TSorter = (arr, start, end, params = [{key: \"value\", inAscending: true}], onMoveCb)=>{\r\n\r\n\r\n  for(let position = 0; position < arr.length - 1; position++){\r\n    let minVal = position;\r\n    for(let mover = position + 1; mover <= arr.length - 1; mover++){\r\n      if(!sortComparator(arr[mover], arr[minVal], params)){\r\n        minVal = mover;\r\n      }\r\n    }\r\n    if(minVal !== position){\r\n      swap(arr, position, minVal);\r\n      onMoveCb && onMoveCb(position, minVal, [position, minVal], [], true);\r\n    }\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default sort;\r\n\r\n","import { swap, TSorter, sortComparator } from \".\";\r\n\r\n\r\n\r\n\r\nconst sort: TSorter = (arr, start, end, params=[{key: \"value\", inAscending: true}], onMoveCb)=>{\r\n\r\n\r\n  for(let position = 1; position < arr.length; position++){\r\n    \r\n    let currVal = arr[position];\r\n    let runner = position;\r\n    while((runner !== 0) && sortComparator(arr[runner - 1], currVal, params)) {\r\n      // arr[runner] = arr[runner - 1];\r\n      swap(arr, runner, runner - 1);\r\n      onMoveCb && onMoveCb(runner, runner - 1, [position, runner - 1], [], true);\r\n      runner--;\r\n    }\r\n    arr[runner] = currVal;\r\n  }\r\n\r\n\r\n  return arr;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default sort;\r\n\r\n","import { TSorter, TSortParam } from \".\";\r\nimport quickSort from \"./quickSort\";\r\n\r\n\r\nconst sort: TSorter = (arr, start, end, params = [{key: \"value\", inAscending: true}], onMoveCb)=>{\r\n  \r\n  const low = start || 0;\r\n  const high = end === undefined || end === null ? arr.length - 1 : end;\r\n\r\n  quickSort(arr, low, high, params, onMoveCb);\r\n  if(typeof(arr[0]) !== \"object\") return arr;\r\n  \r\n  markQuartiles(arr, low, high, params);\r\n  return arr;\r\n}\r\n\r\n\r\nconst markQuartiles = (arr: any[], start: number, end: number, params: TSortParam[])=>{\r\n  \r\n  if(params.length === 0) return;\r\n  const [{key, inAscending}, ...rest] = params;\r\n\r\n  const range = end - start + 1; \r\n  if(range < 4) return;\r\n\r\n  const q1 = start + Math.round(range * 0.25); \r\n  const median = start + Math.round(range * 0.5); \r\n  const q3 = start + Math.round(range * 0.75); \r\n\r\n  const marks = [\"Q1\", \"Q2\", \"Q3\", \"Q4\"];\r\n  !inAscending && marks.reverse();\r\n\r\n  arr.forEach((item, index) => {\r\n\r\n    if((index < start) || (index > end)) return;\r\n\r\n    !item[\"quartileMark\"] && ( item[\"quartileMark\"] = {} );\r\n    if     (index <= q1)     { item[\"quartileMark\"][key] = marks[0]; }\r\n    else if(index <= median) { item[\"quartileMark\"][key] = marks[1]; }\r\n    else if(index <= q3)     { item[\"quartileMark\"][key] = marks[2]; }\r\n    else                     { item[\"quartileMark\"][key] = marks[3]; }\r\n  })\r\n\r\n  markQuartiles(arr,      start,     q1, rest);\r\n  markQuartiles(arr,     q1 + 1, median, rest);\r\n  markQuartiles(arr, median + 1,     q3, rest);\r\n  markQuartiles(arr,     q3 + 1,    end, rest);\r\n\r\n}\r\n\r\n\r\n\r\nexport default sort;\r\n\r\n\r\n","\r\nimport heapSort from \"./heapSort\";\r\nimport quickSort from \"./quickSort\";\r\nimport bubbleSort from \"./bubbleSort\";\r\nimport mergeSort from \"./mergeSort\";\r\nimport selectionSort from \"./selectionSort\";\r\nimport insertionSort from \"./insertionSort\";\r\nimport quartileSort from \"./quartileSort\";\r\n\r\n// import quickSort, {  swap } from \"./qSort\";\r\n// import { default as quickSort } from \"./quickSort\";\r\n// import { default as bubbleSort } from \"./bubbleSort\";\r\n\r\nexport interface T {\r\n  value: number\r\n}\r\nexport type TSortEffectCallback = (startPosition: number, endPosition: number, emphasis1?: number[], emphasis2?: number[], isSwapEffect?: boolean)=>void\r\nexport type TSorter = (arr: T[] | number[] | any[], start: number | null, end: number | null, params: TSortParam[], onMoveCb?: TSortEffectCallback)=>T[] | number[] | any[]\r\nexport type TSorterNames = \"quick-sort\" | \"bubble-sort\" | \"heap-sort\" | \"merge-sort\" | \"selection-sort\" | \"insertion-sort\" | \"quartile-sort\"\r\nexport type TComparator = (a: any, b: any, param: TSortParam[]) => boolean\r\nexport type TSortParam = {key: string, inAscending: boolean}\r\n\r\n/**\r\n * Returns 1 if a is \"greater\" than b.\r\n * The function does the comparison by using keys on a and b\r\n * \r\n * @param  {any} a: First JS Object in comparison\r\n * @param  {any} b: Second JS Object in comparison\r\n * @param  {TSortParams[]} keys: Keys to index a and b for comparison\r\n */\r\nconst sortComparator: TComparator = (a: any, b: any, params: TSortParam[] = [{key: \"value\", inAscending: true}]) => {\r\n  const [param, ...rest] = params;\r\n  const aVal = getValue(a, param.key);\r\n  const bVal = getValue(b, param.key);\r\n  if(aVal === bVal) return rest.length === 0 ? true : sortComparator(a, b, rest);\r\n  return (aVal > bVal) === param.inAscending; //Must work with number and strings\r\n}\r\n\r\n/**\r\n * Return a supported sorter corresponding to the input \"algorithmName\".\r\n * If the input is not recognized \"quickSort\" is returned\r\n * \r\n * @param  {string} algorithmName\r\n */\r\nconst getSorter = function(algorithmName: string){\r\n  if(algorithmName === \"bubble-sort\") return bubbleSort;\r\n  if(algorithmName === \"heap-sort\") return heapSort;\r\n  if(algorithmName === \"merge-sort\") return mergeSort;\r\n  if(algorithmName === \"selection-sort\") return selectionSort;\r\n  if(algorithmName === \"insertion-sort\") return insertionSort;\r\n  if(algorithmName === \"quartile-sort\") return quartileSort;\r\n  return quickSort;\r\n}\r\nexport default getSorter;\r\n\r\n\r\n\r\n/**\r\n * Swaps two array elements given their indices \"low\" and \"high\".\r\n * \r\n * @param  {T[]|number[]} arr\r\n * @param  {number} low: First Index\r\n * @param  {number} high: Second Index\r\n */\r\nconst swap = (arr: T[] | number[], low: number, high: number) => { \r\n  const tmp = arr[high]; \r\n  arr[high] = arr[low]; \r\n  arr[low] = tmp; \r\n}\r\n\r\n/**\r\n * Given an input entity \"el\", return a value.\r\n * \r\n * If el is a number, el is returned.\r\n * \r\n * Else, el is an object and el[key] is returned.\r\n * \r\n * @param  {T|number|any} el\r\n * @param  {string=\"value\"} key\r\n */\r\nconst getValue = (el: T | number | any, key: string = \"value\") => typeof(el) === \"number\" ? el as number : (el as any)[key];\r\nexport { getValue, swap, sortComparator }","import React from \"react\";\r\nimport './index.css';\r\n\r\n// https://loading.io/css/\r\n\r\nexport class CSSLoaderEllipsis extends React.Component {\r\n  render() {\r\n    return <div className=\"css-loader lds-ellipsis\"><div></div><div></div><div></div><div></div></div>;\r\n  }\r\n}\r\n\r\n\r\nexport class CSSLoaderDualRing extends React.Component {\r\n  render() {\r\n    return <div className=\"css-loader lds-dual-ring\"></div>;\r\n  }\r\n}","\r\n\r\n\r\nexport function* arrayIterator(data: any[]) {\r\n\r\n  let iterationCount = 0;\r\n  for(let item of data) {\r\n    iterationCount++; \r\n    yield typeof(item) === \"object\" ? {...item} : item\r\n  }\r\n  return iterationCount;\r\n}\r\n\r\nexport function *takeNFromIterator(batchSize: number = 50, iterator: Generator<any, number, unknown>) {\r\n\r\n  let batchCount = 0;\r\n  let isDone = false;\r\n  while(!isDone){\r\n    let arr = [];\r\n    batchCount++; \r\n    for(let i = 0; i < batchSize && !isDone; i++) {\r\n      const {value, done} = iterator.next();\r\n      isDone = done || false;\r\n      !isDone && arr.push(value);\r\n    }\r\n    yield arr;\r\n  }\r\n\r\n\r\n  return batchCount;\r\n}\r\n\r\nconst takeBatchFromIterator = (batchSize: number = 50, data: any[]) => {\r\n\r\n  const init = (size: number)=>takeNFromIterator(size, arrayIterator(data))\r\n  let it = init(batchSize);\r\n  let isDone = false;\r\n\r\n  return {\r\n    reset: (batch?: number) => {\r\n      it = init(batch || batchSize)\r\n    },\r\n    next: () => {\r\n      const { value, done } = it.next();\r\n      isDone = done || false;\r\n      return [...(Array.isArray(value) ? value : [])]\r\n    },\r\n    isDone: () => isDone\r\n  }\r\n  \r\n}\r\nexport default takeBatchFromIterator\r\n\r\n\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { TSortKey } from '.';\r\nimport { useEffectWhenInView } from '../../custom-hooks/useEffectWhenInView';\r\nimport { CSSLoaderDualRing } from '../CSSLoaders';\r\nimport { TSorter } from '../Sorters';\r\nimport takeBatchFromIterator from './iterators';\r\nimport './table.css';\r\n\r\n\r\ntype Props = {\r\n  onDragStart: (ev: React.DragEvent<HTMLElement>) => void,\r\n  keysToSortBy: TSortKey[],\r\n  sorter: TSorter\r\n}\r\n\r\n\r\nconst keyToID = (key: string) => (key as string).toLowerCase().replace(\" \",\"-\");\r\nconst extractKeysFromData = (data: any[]) => data && data[0] ? Object.keys(data[0]) : [];\r\n// const isOnProductionHost = () => /(localhost|127.0.0.1|127.0.0.0|0.0.0.0)/.exec(window.location.origin) === null;\r\n\r\n\r\n\r\n\r\nexport default function Table({onDragStart, keysToSortBy, sorter}: Props) {\r\n\r\n\r\n  const [srcData, setSrcData] = useState<any[]>([]);\r\n  useEffect(()=>{\r\n    fetch(\"/table-sorter/factbook.json\")\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      sorter(\r\n        res, 0, res.length - 1, \r\n        (keysToSortBy && keysToSortBy[0]) \r\n          ? keysToSortBy.map(item => ({key: item.key, inAscending: item.isDirectionUp})) \r\n          : [{key: \"Country Name\", inAscending: true}]\r\n      )\r\n      batchIterator.current = takeBatchFromIterator(batchSize, res);\r\n      setSrcData(res);\r\n    })\r\n  }, [1])\r\n\r\n\r\n\r\n\r\n  const [uiData, setUiData] = useState<any[]>([]);\r\n  const [hasNoMoreData, setHasNoMoreData] = useState(false);\r\n  const batchSize = 20;\r\n  const batchIterator = useRef(takeBatchFromIterator(batchSize, srcData));\r\n  const loadMore = ()=>{\r\n    const nextBatch = batchIterator.current.next();\r\n    setHasNoMoreData(batchIterator.current.isDone());\r\n    (nextBatch.length !== 0) && setUiData(data => [...data, ...nextBatch]);\r\n  }\r\n  useEffectWhenInView(\"tfoot td span\", ()=>loadMore());\r\n\r\n\r\n\r\n\r\n  const keysFromData = useMemo(()=>extractKeysFromData(srcData), [srcData])\r\n  const keysFromProps = useMemo(()=>keysToSortBy.map(item => item.key), [keysToSortBy])\r\n  const tableRef = useRef<HTMLElement | null>(null);\r\n  useEffect(()=>{\r\n    const srcCopy = srcData.map(item => ({...item}))\r\n    sorter(\r\n      srcCopy, 0, srcCopy.length - 1, \r\n      (keysToSortBy && keysToSortBy[0]) \r\n        ? keysToSortBy.map(item => ({key: item.key, inAscending: item.isDirectionUp})) \r\n        : [{key: \"Country Name\", inAscending: true}]\r\n    )\r\n    batchIterator.current = takeBatchFromIterator(batchSize, srcCopy);\r\n    setUiData([]);\r\n    tableRef.current && (tableRef.current.scrollTop = 0);\r\n  }, [keysToSortBy, sorter, srcData])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <section className=\"sortable-table__container\" ref={tableRef}>\r\n      <input type=\"checkbox\" id=\"sortable-table__first-column-control\" className=\"hidden\"/>\r\n      <table className=\"sortable-table\" >\r\n        <thead>\r\n          <tr>\r\n            {\r\n              keysFromData.map((key, idx) => {\r\n                const id = keyToID(key);\r\n                const isKeyToSortBy = keysFromProps.includes(key);\r\n                if(idx === 0) { return (\r\n                  <th key={idx} id={id} draggable={!isKeyToSortBy} className={`sortable-table__header__item ${isKeyToSortBy ? \"disabled\": \"\"}`} onDragStart={onDragStart}>\r\n                    <label htmlFor=\"sortable-table__first-column-control\" className=\"flex items-center justify-end\">\r\n                      <span>{key}</span>\r\n                      <i className=\"fas fa-angle-double-left ml-2\"></i>\r\n                      <i className=\"fas fa-angle-double-right\"></i>\r\n                    </label>\r\n                  </th>\r\n                )} else {\r\n                  return (   \r\n                  <th key={idx} id={id} draggable={!isKeyToSortBy} className={`sortable-table__header__item ${isKeyToSortBy ? \"disabled\": \"\"}`} onDragStart={onDragStart}>\r\n                    <span>{key}</span>\r\n                  </th>\r\n                )}\r\n              })\r\n            }\r\n          </tr>\r\n\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            uiData.map((entry, idx) => {\r\n              return (\r\n                <tr key={idx + 1}>\r\n                  {\r\n                    keysFromData.map((key, idx_) => {\r\n                      const quartileMark = entry.quartileMark ? entry.quartileMark[key] : \"\";\r\n                      return (\r\n                        <td key={idx_} className={`${keyToID(key)} ${quartileMark} ${keysFromProps.includes(key) ? \"isSorted\" : \"\"}`}>\r\n                          <span>{ (entry as any)[key]  || \"\" }</span>\r\n                        </td>\r\n                      )}\r\n                    )\r\n                  }\r\n                </tr>\r\n              )\r\n            })\r\n          }\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td></td>\r\n            <td colSpan={keysFromData.length}>\r\n              {\r\n                hasNoMoreData\r\n                  ? <span></span> \r\n                  : <span><CSSLoaderDualRing/> Loading More Data...</span>\r\n              }\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n    </section>\r\n\r\n  )\r\n\r\n}","import { useLayoutEffect } from \"react\";\r\n\r\n/**\r\n * Generalization of the \"lazy loading\" functionality. \r\n * \r\n * The function uses an Intersection Observer to determine \r\n * when a html target element (identified by the \"cssSelector\" argument)\r\n * enters in view.\r\n * \r\n * When that happens the callback (effect) is fired.\r\n * \r\n * \r\n * @param  {string} cssSelector\r\n * @param  {Function} callback\r\n */\r\nexport const useEffectWhenInView = (cssSelector: string, callback: Function)=>{\r\n\r\n  useLayoutEffect(()=>{\r\n\r\n    const el = document.querySelector(cssSelector);\r\n    const intObserver = new IntersectionObserver(entries => {\r\n      entries.forEach(entry => callback && (entry.intersectionRatio > 0) && callback(entry))\r\n    }, {threshold: [.9]})\r\n\r\n    el && intObserver.observe(el)\r\n\r\n    return el ? () => intObserver.unobserve(el) : ()=>{};\r\n\r\n  }, [cssSelector, callback])\r\n\r\n}","import React, { useState } from 'react';\r\nimport Checkbox from '../CustomFormsControls/checkbox';\r\nimport getSorter, { TSorterNames } from '../Sorters';\r\nimport './index.css';\r\nimport Table from './table';\r\n\r\n\r\nexport type TSortKey = {id: string, key: string, isDirectionUp: boolean}\r\nexport default function TableSorter() {\r\n\r\n  const [checkbox, setCheckbox] = useState<boolean>(true);\r\n  const [sortAlg, setSortAlg] = useState<TSorterNames>(\"quick-sort\");\r\n\r\n\r\n\r\n\r\n  // https://codepen.io/lorelea/pen/WRqQyy?editors=0010\r\n  // http://bernardo-castilho.github.io/DragDropTouch/demo/\r\n  // https://www.codeproject.com/Articles/1091766/Add-support-for-standard-HTML-Drag-and-Drop-operat\r\n  const [sortKeys, _setSortKeys] = useState<TSortKey[]>([]);\r\n  const addToSortKeys = (newKey: TSortKey)=>{\r\n    _setSortKeys(keys => {\r\n      const existingKey = sortKeys.find(item => item.id === newKey.id)\r\n      return existingKey ? keys : [...keys, {...newKey}]\r\n    })\r\n  }\r\n  const removeFromSortKeys = (keyID: string) => _setSortKeys(keys => keys.filter(key => key.id !== keyID))\r\n  const changeSortKeyDirection = (keyID: string, isUp: boolean) => _setSortKeys(keys => keys.map(key => { (key.id === keyID) && (key.isDirectionUp = isUp); return {...key}; }))\r\n  const resetSortKeys = ()=> _setSortKeys([])\r\n  const handleResetTable = ()=>resetSortKeys()\r\n\r\n  const handleDragStart = (ev: React.DragEvent<HTMLElement>) => {\r\n    const inputCheckbox = ev.currentTarget.querySelector(\"input[type=checkbox]\")\r\n    ev.dataTransfer.setData(\"text\", JSON.stringify({\r\n      id: ev.currentTarget.id,\r\n      key: ev.currentTarget.querySelector(\"span\")?.innerText,\r\n      isDirectionUp: inputCheckbox ? (inputCheckbox as HTMLInputElement).checked : true,\r\n    }));\r\n  }\r\n  const allowDrop = (ev: React.DragEvent<HTMLElement>)=>{\r\n\t\tev.preventDefault();\r\n\t\tev.stopPropagation();\r\n  }\r\n  const handleDrop = (ev: React.DragEvent<HTMLElement>)=>{\r\n    addToSortKeys(JSON.parse(ev.dataTransfer.getData(\"text\")) as TSortKey);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"table-sorter\">\r\n      <header className=\"table-sorter__header grid p-4 lg:flex lg:justify-between lg:flex-row lg:items-end\">\r\n\r\n        <section className=\"flex justify-between items-center lg:inline-block relative z-10\">\r\n          <h1 className=\"text-2xl lg:text-4xl\">Table Sorter</h1>\r\n          <label htmlFor=\"app-menu-control--hidden\" id=\"app-menu-control\" className=\"text-2xl flex lg:hidden rounded-full hover:bg-gray-100 w-10 h-10 justify-center items-center\">\r\n            <i className=\"fas fa-bars\"></i>\r\n          </label>\r\n        </section>\r\n\r\n\r\n        <input type=\"checkbox\" id=\"app-menu-control--hidden\" className=\"hidden\"/>\r\n        <section className=\"app-menu pt-4 lg:pt-0 flex text-lg flex-col lg:flex-row \">\r\n          <div className=\"flex items-center lg:mr-8 flex-col lg:flex-row\">\r\n            <button className=\" py-2 btn btn--link\" onClick={handleResetTable}>Reset</button>\r\n            <span className=\"p-4 py-2 hidden\"><Checkbox type={1} value={checkbox} onChange={setCheckbox} constantText={\"Direction: \"} onText={\"Reverse\"} offText={\"Normal\"} extraClasses={\"with-muted-p\"}/></span>\r\n          </div>\r\n          <ul className=\"sort-algorithms flex items-stretch flex-col lg:flex-row rounded overflow-hidden\">\r\n            <li><input className=\"hidden sort-algorithm\" type=\"radio\" name=\"sort-algorithm\" value=\"quick-sort\" id=\"quick-sort\" checked={sortAlg === \"quick-sort\"} onChange={e=>e.target.checked && setSortAlg(\"quick-sort\")} /><label className=\"p-4 py-2 text-center\" htmlFor=\"quick-sort\">Quick Sort</label></li>\r\n            <li><input className=\"hidden sort-algorithm\" type=\"radio\" name=\"sort-algorithm\" value=\"bubble-sort\" id=\"bubble-sort\" checked={sortAlg === \"bubble-sort\"} onChange={e=>e.target.checked && setSortAlg(\"bubble-sort\")} /><label className=\"p-4 py-2 text-center\" htmlFor=\"bubble-sort\">Bubble Sort</label></li>\r\n            <li><input className=\"hidden sort-algorithm\" type=\"radio\" name=\"sort-algorithm\" value=\"merge-sort\" id=\"merge-sort\" checked={sortAlg === \"merge-sort\"} onChange={e=>e.target.checked && setSortAlg(\"merge-sort\")} /><label className=\"p-4 py-2 text-center\" htmlFor=\"merge-sort\">Merge Sort</label></li>\r\n            <li><input className=\"hidden sort-algorithm\" type=\"radio\" name=\"sort-algorithm\" value=\"insertion-sort\" id=\"insertion-sort\" checked={sortAlg === \"insertion-sort\"} onChange={e=>e.target.checked && setSortAlg(\"insertion-sort\")}/><label className=\"p-4 py-2 text-center\" htmlFor=\"insertion-sort\">Insertion Sort</label></li>\r\n            <li><input className=\"hidden sort-algorithm\" type=\"radio\" name=\"sort-algorithm\" value=\"quartile-sort\" id=\"quartile-sort\" checked={sortAlg === \"quartile-sort\"} onChange={e=>e.target.checked && setSortAlg(\"quartile-sort\")} /><label className=\"p-4 py-2 text-center\" htmlFor=\"quartile-sort\">Quartile Sort</label></li>\r\n          </ul>\r\n        </section>\r\n      </header>\r\n\r\n      <main className=\"overflow-hidden flex flex-col\">\r\n        <section className=\"px-4 py-2 lg:py-6 text-md md:text-lg border-t border-b bg-gray-50\" onDragOver={allowDrop} onDrop={handleDrop}>\r\n          <span className=\"text-sm lg:text-md\">Drag headers here to sort: </span>\r\n          {\r\n            sortKeys.map((item, idx) => (\r\n              <span onClick={()=>{}} key={idx} id={`${item.id}--cloned`} className=\"sort-key\">\r\n                <label htmlFor={`${item.id}--cloned-checkbox`}>\r\n                  {item.key}\r\n                  <input type=\"checkbox\" id={`${item.id}--cloned-checkbox`} className=\"hidden\" checked={item.isDirectionUp} onChange={e=>{changeSortKeyDirection(item.id, e.target.checked)}}/>\r\n                  <i className=\"fas fa-caret-up\"></i>\r\n                  <i className=\"fas fa-caret-down\"></i>\r\n                </label>\r\n                <span className=\"remove\" onClick={()=>removeFromSortKeys(item.id)}>\r\n                  <i className=\"fas fa-times\"></i>\r\n                </span>\r\n              </span>\r\n            ))\r\n          }\r\n        </section>\r\n        <Table onDragStart={handleDragStart} keysToSortBy={sortKeys} sorter={getSorter(sortAlg)}/>\r\n      </main>\r\n    </div>\r\n    \r\n  )\r\n\r\n}","export default __webpack_public_path__ + \"static/media/bg.cd4da263.svg\";","import React, { CSSProperties, useEffect, useRef, useState } from \"react\";\r\n\r\nimport getSorter, { swap, TSorterNames } from \"../Sorters\";\r\nimport \"./index.css\"\r\n\r\ntype BarProxy = {\r\n  value: number; \r\n  handleNo: number; \r\n  class: string;\r\n}\r\n// type BarProps = {\r\n//   height: number,\r\n//   id: number,\r\n//   position: number\r\n// }\r\ntype Props = {\r\n  nBars?: number\r\n}\r\n\r\nexport default function SortVizualizer({nBars}: Props) {\r\n\r\n  const [currentSortingAlsorithm, _setCurrentSortingAlsorithm] = useState<TSorterNames>(\"merge-sort\");\r\n  const setCurrentSortingAlsorithm = (algName: TSorterNames)=>{\r\n    // On new alg, execute side effect to reset vizualizer\r\n    barEffects.current = [];\r\n    _setCurrentSortingAlsorithm(algName);\r\n  }\r\n\r\n\r\n\r\n  const getRandomHeight = () => 5 + Math.round(Math.random() * 20) * 5;\r\n  // The height and position of the bars being vizualized are contained in bars\r\n  const bars = useRef<BarProxy[]>(Array(nBars).fill(0).map((_, idx)=> ({value: getRandomHeight(), handleNo: idx, class: \"\"})))\r\n\r\n\r\n\r\n\r\n  // Vizualizer Effects\r\n  // Structure that will record all swap movement that happened during the sorting\r\n  // These movement will become the effects seen on the ui\r\n  const barEffects = useRef<{f: Function, timeout: number}[]>([])\r\n  const [counter, setCounter] = useState<number>(0); // Dummy variable used to force rerenders\r\n  const renderBarEffect = ()=>setCounter(c => c + 1);\r\n  useEffect(()=>{\r\n    \r\n    // Effects are empty, we need to start a new sorting cycle\r\n    if(barEffects.current.length === 0) {\r\n      new Promise((resolve) => setTimeout(resolve, 1500)).then(()=>{\r\n\r\n        // Adjust heights for new sorting cycle\r\n        bars.current.forEach(bar=> bar.value = getRandomHeight());\r\n\r\n        // Pause just afer adjusting\r\n        barEffects.current.push({f: ()=>{}, timeout: 1500});\r\n\r\n        // Presort array and record swap movements that need to happen in order to get eventually to a sorted set bars\r\n        getSorter(currentSortingAlsorithm)(\r\n          bars.current.map(curr=>curr.value), \r\n          0, \r\n          bars.current.length - 1, \r\n          [{key: \"value\", inAscending: true}],\r\n          (initial, final, level1, level2, isSwapEffect)=>barEffects.current.push({\r\n            f: ()=>{ \r\n              if(isSwapEffect) swap(bars.current, initial, final); \r\n              if(!isSwapEffect) { bars.current[initial].value = final; } \r\n              // console.log(level1)\r\n              bars.current.forEach(bar => bar.class = \"\");\r\n              level1?.forEach(idx => bars.current[idx].class = \"emphasis-1\");\r\n              level2?.forEach(idx => bars.current[idx].class = \"emphasis-2\");\r\n            }, \r\n            timeout: barEffects.current.length === 0 ? 1500 : 300\r\n          })\r\n        );\r\n\r\n        // Schedule the recorded effects to be run one by one\r\n        renderBarEffect();\r\n      })\r\n\r\n\r\n    }else{\r\n\r\n      // Extract first of our bar effects\r\n      const [first, ...rest] = barEffects.current;\r\n      \r\n      // If it's not undefined, wait for timeout, then run the effect and force and re-render\r\n      first && new Promise((resolve) => setTimeout(resolve, first.timeout)).then(()=>{\r\n        first.f();\r\n        // Decrease the amount of effects that are still to be run for this sorting cycle\r\n        barEffects.current = rest;\r\n        renderBarEffect();\r\n      })\r\n\r\n    }\r\n\r\n    // This effect is run everytime counter is changed\r\n  }, [counter/*, currentSortingAlsorithm*/])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div id=\"sort-vizualizer\" style={{\"--count\": bars.current.length * 2} as CSSProperties}>\r\n      {\r\n          bars\r\n          .current\r\n          // Adjust Height and position of bar\r\n          .map((_, idx) => {\r\n            const position = bars.current.findIndex(bar => bar.handleNo === idx); \r\n            const height = bars.current[position].value;\r\n            const className = bars.current[position].class;\r\n            return <div key={idx} style={{height: height + \"%\", left: `calc(${position} * 2 * var(--width))`}} className={className} id={`sort-vizualizer-bar-${idx}`} />\r\n          })\r\n          // Insert a dummy div between each bar, to space them\r\n          .reduce(\r\n            (acc, curr, idx) => [...acc, curr, <div key={bars.current.length + idx}/>], \r\n            [<div/>]\r\n          )\r\n          // Remove the initial value of acc\r\n          .slice(1)\r\n      }\r\n\r\n\r\n\r\n      <div className=\"sort-vizualizer__settings\">\r\n        <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\r\n        <select id=\"sort-vizualizer__algorithm\" name=\"sort-vizualizer__algorithm\" value={currentSortingAlsorithm} onChange={evt=>setCurrentSortingAlsorithm(evt.target.value as TSorterNames)}>\r\n          <option value=\"quick-sort\">Quick Sort</option>\r\n          <option value=\"bubble-sort\">Bubble Sort</option>\r\n          <option value=\"heap-sort\">Heap Sort</option>\r\n          <option value=\"merge-sort\">Merge Sort</option>\r\n          <option value=\"selection-sort\">Selection Sort</option>\r\n          <option value=\"insertion-sort\">Insertion Sort</option>\r\n        </select>\r\n      </div>\r\n\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n(SortVizualizer as React.FC).defaultProps = {\r\n  nBars: 15\r\n}\r\n\r\n","import './index.css';\r\nimport hero from './assets/bg.svg';\r\nimport SortVizualizer from \"../SortVizualizer\"\r\n\r\nexport type Props = {\r\n  onStartExploring: ()=>void\r\n}\r\n\r\nexport default function Welcome({onStartExploring}: Props) {\r\n\r\n\r\n  return (\r\n    <main id=\"welcome\">\r\n\r\n      <header className=\"welcome__header\">\r\n        <h1 className=\"text-4xl mb-4 lg:text-6xl lg:mb-8\">Table Sorter</h1>\r\n        <h2 className=\"text-1xl-m lg:text-3xl\">Application that demonstrate sorting algorithms on tabular data</h2>\r\n      </header>\r\n\r\n      <section className=\"welcome__hero flex align-center\">\r\n        <img src={hero} alt=\"Sorting Algorithm\"/>\r\n      </section>\r\n\r\n      <section className=\"welcome__subtext\">\r\n        <h3>\r\n          <p className=\"text-1xl-m mb-4 lg:text-2xl\">Supported Sorters: </p>\r\n          <ul>\r\n            <li className=\"lg:text-1xl-m\"><i className=\"far fa-check-circle mr-4 ml-4 mb-2\"></i><span>Quick Sort</span> </li>\r\n            <li className=\"lg:text-1xl-m\"><i className=\"far fa-check-circle mr-4 ml-4 mb-2\"></i><span>Merge Sort</span> </li>\r\n            <li className=\"lg:text-1xl-m\"><i className=\"far fa-check-circle mr-4 ml-4 mb-2\"></i><span>Heap Sort</span> </li>\r\n            <li className=\"lg:text-1xl-m\"><i className=\"far fa-check-circle mr-4 ml-4 mb-2\"></i><span>Bubble Sort</span> </li>\r\n            <li className=\"lg:text-1xl-m\"><i className=\"far fa-check-circle mr-4 ml-4 mb-2\"></i><span>Insertion Sort</span> </li>\r\n            <li className=\"lg:text-1xl-m\"><i className=\"far fa-check-circle mr-4 ml-4 mb-2\"></i><span>Selection Sort</span> </li>\r\n            \r\n          </ul>\r\n        </h3>\r\n      </section>\r\n\r\n      <footer className=\"w-full welcome__footer \">\r\n        <button className=\"btn w-full \" onClick={onStartExploring}>Start Exploring</button>\r\n      </footer>\r\n\r\n\r\n      <div className=\"welcome__design-element flex hidden- md:flex- md:absolute\">\r\n        <SortVizualizer/>\r\n      </div>\r\n      \r\n\r\n    </main>\r\n    \r\n  )\r\n\r\n}","import React from 'react';\nimport './App.css';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n\n} from \"react-router-dom\";\nimport TableSorter from './components/TableSorter';\nimport Welcome from './components/Welcome';\nimport { useCustomCss_vh } from './custom-hooks/useCustomCss_vh';\nimport { useAppURI } from './custom-hooks/useAppURI';\n\n\n\nfunction App() {\n\n  // const [isAtWelcomeScreen, setIsAtWelcomeScreen] = useState<boolean>(true);\n  \n  useCustomCss_vh();\n  const uri = useAppURI(\"table-sorter\");\n  console.log(uri, `${uri}/data`)\n\n  \n  return (\n    <Router>\n      <Switch>\n\n\n        {/* https://stackoverflow.com/questions/42123261/programmatically-navigate-using-react-router-v4 */}\n        {/* https://www.codegrepper.com/code-examples/javascript/Programmatically+navigate+using+react+router */}\n        <Route path={`${uri}/welcome`} render={({history})=>(\n          <Welcome onStartExploring={()=>history.push(`${uri}/data`)} />\n        )}/>\n\n          \n\n        <Route path={`${uri}/data`}>\n          <TableSorter />\n        </Route>\n\n\n\n        {/* Redirects */}\n        <Route path={`${uri}/`}>\n          <Redirect to={`${uri}/welcome`} />\n        </Route>\n        <Route path={`${uri}/*`}>\n          <Redirect to={`${uri}/data`} />\n        </Route>\n\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","import { useEffect } from \"react\";\r\n\r\n\r\n/* https://stackoverflow.com/questions/37112218/css3-100vh-not-constant-in-mobile-browser */\r\n/* https://dev.to/admitkard/mobile-issue-with-100vh-height-100-100vh-3-solutions-3nae */\r\n/* https://stackoverflow.com/a/60735432/9034699 */\r\n\r\n\r\n\r\n/**\r\n * This function will create a css custom variable --vh based on the current viewport height.\r\n * \r\n * --vh will take into consideration the app bar on top. \r\n * \r\n * So The example below will give an element full height with no scrolls.\r\n * \r\n * @example\r\n *  calc(100 * var(--vh))\r\n\r\n * @param  {None} None\r\n */\r\nexport const useCustomCss_vh = (target?: HTMLElement) =>{\r\n\r\n  const htmlTarget = target ? target : document.querySelector(':root') as HTMLElement\r\n  \r\n  const adjuster = (target: HTMLElement)=> { \r\n    target?.style.setProperty('--vh', window.innerHeight/100 + 'px');\r\n  }\r\n\r\n  adjuster(htmlTarget);\r\n  useEffect(() => {\r\n    // window.addEventListener(\"scroll\", throttle(callback, 100));\r\n    window.addEventListener(\"resize\", ()=> adjuster(htmlTarget));\r\n\r\n    return () => {\r\n      // window.removeEventListener(\"scroll\", throttle(callback, 100));\r\n      window.removeEventListener(\"resize\", ()=> adjuster(htmlTarget));\r\n    };\r\n  });\r\n\r\n\r\n}\r\n\r\n\r\n","import { useMemo } from \"react\";\r\n\r\nexport const useAppURI = (baseAppURI: string = \"/\") =>{\r\n  const uri = useMemo(()=>{\r\n    const baseCurrURI = window.location.pathname.split(\"/\")[1]\r\n    const uri = (!baseCurrURI || (baseCurrURI === \"\")) ? `/${baseAppURI}` : `/${baseCurrURI}`; \r\n    return uri.replaceAll(\"//\", \"/\");\r\n  }, [1]);\r\n  return uri;\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}